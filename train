#!/usr/bin/env python
import os
from pathlib import Path
from shutil import rmtree

import spacy

from spacy.cli.download import download
from spacy.cli.evaluate import evaluate
from spacy.cli.init_config import fill_config
from spacy.cli.package import package
from spacy.cli.train import train
from wasabi import msg

version = (Path(__file__).parent / "VERSION").read_text().strip()
gpu_id = int(os.environ.get("GPU_ID", "-1"))

project_dir = Path(__file__).parent.resolve()

corpus_dir = project_dir / "corpus"
configs_dir = project_dir / "configs"
configs_filled_dir = configs_dir / "filled"
training_dir = project_dir / "training"
metrics_dir = project_dir / "metrics"
packages_dir = project_dir / "packages"

for d in [configs_filled_dir, training_dir, metrics_dir, packages_dir]:
    if d.is_dir():
        rmtree(d)
    d.mkdir(parents=True, exist_ok=True)

corpus_types = ["hdt", "wikiner"]
model_types = ["lg"] if gpu_id < 0 else ["lg", "dist"]
model_type2corpus = {"lg": "ud-german-hdt", "dist": "wikiner-de"}

try:
    spacy.load("de_core_news_lg")
except:
    download("de_core_news_lg")

for corpus_type in corpus_types:
    for model_type in model_types:
        corpus = model_type2corpus[model_type]
        prefix = f"{corpus_type}-{model_type}"
        msg.divider(f"Pipeline: {prefix}")
        cfg_file_name = f"{prefix}.cfg"
        cfg_path = configs_filled_dir / cfg_file_name
        training_path = training_dir / prefix
        fill_config(cfg_path, configs_dir / cfg_file_name, silent=True)
        train(cfg_path, training_path, use_gpu=gpu_id)
        model_path = training_path / "model-best"
        evaluate(
            str(model_path),
            corpus_dir / corpus / "test.spacy",
            metrics_dir / f"{prefix}.json",
            silent=False,
            use_gpu=gpu_id,
        )
        package(
            model_path,
            packages_dir,
            name=f"{corpus_type}_{model_type}",
            version=version,
            create_wheel=True,
            create_sdist=False,
            force=True,
            silent=False,
        )
